{"version":3,"sources":["InfoBox.js","LineGraph.js","Table.js","util.js","Map.js","App.js","reportWebVitals.js","index.js"],"names":["InfoBox","title","cases","total","Card","className","CardContent","Typography","color","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","numeral","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","a","fetch","then","response","json","console","log","fetchData","length","datasets","backgroundColor","borderColor","Table","countries","map","country","casesTypeColors","hex","rgb","half_op","multiplier","recovered","deaths","sortData","sortedData","sort","b","prettyPrintStat","stat","showDataOnMap","Circle","center","countryInfo","lat","long","fillColor","fillOpacity","Math","sqrt","Popup","style","backgroundImage","flag","Map","zoom","MapContainer","TileLayer","url","attribution","App","setInputCountry","setCountryInfo","setCountries","mapCountries","setMapCountries","tableData","setTableData","setCasesType","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","name","iso2","getCountriesData","onCountryChange","e","countryCode","target","FormControl","Select","variant","onChange","MenuItem","onClick","isRed","active","todayCases","todayRecovered","todayDeaths","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c14f57a.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Card,CardContent,Typography} from '@material-ui/core'\r\nimport './InfoBox.css'\r\n\r\nfunction InfoBox({title,cases,total}) {\r\n    return (\r\n        <Card className=\"infoBox\">\r\n            <CardContent>\r\n{/*Titile */}\r\n<Typography className=\"infoBox__title\" color=\"textSecondary\">{title}</Typography>\r\n\r\n\r\n{/*+120k Number of cases */}\r\n<h2>{cases}</h2>\r\n\r\n<Typography className=\"infoBox__total\" color=\"textSecondary\">{total}Total</Typography>\r\n</CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default InfoBox\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  let chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  }\r\n  return chartData;\r\n};\r\n\r\nfunction LineGraph({ casesType }) {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          let chartData = buildChartData(data, casesType);\r\n          setData(chartData);\r\n          console.log(chartData);\r\n          // buildChart(chartData);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, [casesType]);\r\n\r\n  return (\r\n    <div>\r\n      {data?.length > 0 && (\r\n        <Line\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: \"rgba(103,180,255, 0.5)\",\r\n                borderColor: \"rgb(0,0,255)\",\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n          options={options}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;","import React from 'react'\r\nimport './Table.css';\r\n\r\nfunction Table({countries}) {\r\n    return (\r\n        <div className=\"table\">\r\n            {countries.map(({country,cases}) => (\r\n                <tr>\r\n                    <td>{country} </td>\r\n                    <td>\r\n                        <strong>\r\n                            {cases}\r\n                            </strong> \r\n                            </td>\r\n                </tr>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Table\r\n","import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#CC1034\",\r\n    rgb: \"rgb(204, 16, 52)\",\r\n    half_op: \"rgba(204, 16, 52, 0.5)\",\r\n    multiplier: 800,\r\n  },\r\n  recovered: {\r\n    hex: \"#7dd71d\",\r\n    rgb: \"rgb(125, 215, 29)\",\r\n    half_op: \"rgba(125, 215, 29, 0.5)\",\r\n    multiplier: 1100,\r\n  },\r\n  deaths: {\r\n    hex: \"#fb4443\",\r\n    rgb: \"rgb(251, 68, 67)\",\r\n    half_op: \"rgba(0, 68, 67, 0.4)\",\r\n    multiplier: 1800,\r\n  },\r\n};\r\n\r\nexport const sortData = (data) => {\r\n  let sortedData = [...data];\r\n  sortedData.sort((a, b) => {\r\n    if (a.cases > b.cases) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  });\r\n  return sortedData;\r\n};\r\n\r\nexport const prettyPrintStat = (stat) =>\r\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      color={casesTypeColors[casesType].hex}\r\n      fillColor={casesTypeColors[casesType].hex}\r\n      fillOpacity={0.4}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          ></div>\r\n          <div className=\"info-name\">{country.country}</div>\r\n          <div className=\"info-confirmed\">\r\n            Cases: {numeral(country.cases).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));","import React from \"react\";\r\nimport { MapContainer  , TileLayer } from \"react-leaflet\";\r\nimport \"./Map.css\";\r\nimport { showDataOnMap } from \"./util\";\r\n\r\nfunction Map({ countries, casesType, center, zoom }) {\r\n  return (\r\n    <div className=\"map\">\r\n      <MapContainer center={center} zoom={zoom}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {showDataOnMap(countries, casesType)}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport LineGraph from \"./LineGraph\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport numeral from \"numeral\";\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst App = () => {\n  const [country, setInputCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          let sortedData = sortData(data);\n          setCountries(countries);\n          setMapCountries(data);\n          setTableData(sortedData);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n  console.log(casesType);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setInputCountry(countryCode);\n        setCountryInfo(data);\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(4);\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 Tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Coronavirus Cases\"\n            isRed\n            active={casesType === \"cases\"}\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={numeral(countryInfo.cases).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Recovered\"\n            active={casesType === \"recovered\"}\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={numeral(countryInfo.recovered).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            isRed\n            active={casesType === \"deaths\"}\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={numeral(countryInfo.deaths).format(\"0.0a\")}\n          />\n        </div>\n        <Map\n          countries={mapCountries}\n          casesType={casesType}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <div className=\"app__information\">\n            <h3>Live Cases by Country</h3>\n            <Table countries={tableData} />\n            <h3>Worldwide new {casesType}</h3>\n            <LineGraph casesType={casesType} />\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}